package test.java;

import static org.junit.Assert.*;

import java.lang.reflect.Field;

import main.java.Item;
import main.java.SortAlgos;
import main.java.SortDemoData;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class AlgoTest {
	
	//node coverage
	@Test
	public void nodeExceptionMessage() {
	      try {
	          //new ArrayList<Object>().get(0);
	    	  SortAlgos.bubbleSort(null);
	          fail("Expected an NullPointerException to be thrown");
	      } catch (NullPointerException anNullPointerException) {

	      }  
	}
	
	
	@Test
	
	public void bubble() {
		//SortAlgos data = new SortAlgos();
		int[] expect = new int[]{1,2,3,4};
		Item[] vec = new Item[4];
		vec[0] = new Item(3);
		vec[1] = new Item(2);
		vec[2] = new Item(1);
		vec[3] = new Item(4);
		
		SortAlgos.bubbleSort(vec);
		for(int i=0;i<4;i++){
			if(vec[i].key == expect[i]){
			 assertEquals(vec[i].key, expect[i]);
			}
			else{
				assertNotEquals(vec[i].key, expect[i]);
			}
		}
		
	}
	
	public void heap() {
		//SortAlgos data = new SortAlgos();
		int[] expect = new int[]{1,2,3,4};
		Item[] vec = new Item[4];
		vec[0] = new Item(3);
		vec[1] = new Item(2);
		vec[2] = new Item(1);
		vec[3] = new Item(4);
		
		SortAlgos.heapSort(vec);
		for(int i=0;i<4;i++){
			if(vec[i].key == expect[i]){
			 assertEquals(vec[i].key, expect[i]);
			}
			else{
				assertNotEquals(vec[i].key, expect[i]);
			}
		}
		
	}
	
	


}
